##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year = "2022")), aes(fill = overdose_rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = "By Zip in 2022. Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5
))
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year = "2022")), aes(fill = overdose_rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = "By Zip in 2022. Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotlyOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year = "2022"), aes(fill = overdose_rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = "By Zip in 2022. Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotlyOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == "2022"), aes(fill = overdose_rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = "By Zip in 2022. Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
)
})
}
shinyApp(ui = ui, server = server)
View(opioid_shape_wide)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotlyOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == "2022"), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = "By Zip in 2022. Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotlyOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == input$year), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = "By Zip in 2022. Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotlyOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == !!sym(input$year)), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", input$year,". Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
}
shinyApp(ui = ui, server = server)
View(opioid_shape_wide)
View(opioid_shape_wide)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotlyOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlotly({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == input$year), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", input$year,".", " ", "Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlot({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == input$year), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", input$year,".", " ", "Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlot({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, year == !!sym(input$year)), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", !!sym(input$year),".", " ", "Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
}
shinyApp(ui = ui, server = server)
opioid_shape_wide <- opioid_shape %>%
select(zip, geometry, overdose_rate_2022, overdose_rate_2021, overdose_rate_2020) %>%
rename(`2022` = overdose_rate_2022,
`2021` = overdose_rate_2021,
`2020` = overdose_rate_2020) %>%
pivot_longer(cols = starts_with("20"), names_to = "Year", values_to = "Overdose_Rate")
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlot({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, Year == !!sym(input$year)), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", !!sym(input$year),".", " ", "Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlot({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, Year == !!sym(input$year)), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", !!sym(input$year),".", " ", "Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
}
shinyApp(ui = ui, server = server)
##APP
ui <- fluidPage(theme = shinytheme("flatly"),
useShinyFeedback(),
titlePanel("Opioid Overdose Rate and Unhoused Populations"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "Choose a Year of Interest.",
choices = c("2020", "2021", "2022"),
selected = NULL),
h5("Data: IL Dept of Public Health, ACS, Chicago Point-in-Time Survey")
),
mainPanel(
tabsetPanel(
tabPanel(title = "Opioid Rates", plotOutput("plot"))
)
)))
##shiny
#manipulate year in drop down to select which column in opioid dataframe
server <- function(input, output) {
##Plot 2022 RATE
output$plot <- renderPlot({
ggplotly(ggplot() +
geom_sf(data = zip_chi_shape) +
geom_sf(data = filter(opioid_shape_wide, Year == !!sym(input$year)), aes(fill = Overdose_Rate), color = NA) +
labs(title = "Opioid Overdose Rate (Nonfatal and Fatal Per 10,000 Ppl)",
subtitle = paste("By Zip in", !!sym(input$year),".", " ", "Dot Size Correlated W/ High-Density Unhoused Pop.") +
scale_fill_viridis(name="Opioid Overdose Rate", option = "magma", trans = "reverse",
breaks = pretty_breaks(n = 5)) +
geom_point(data = unhoused_locations, aes(x = Longitude, y = Latitude,
size = Responses,),
color = "#8c62aa",alpha = 0.7) +
guides(size = FALSE) +
theme_map() +
theme(
plot.title = element_text(hjust = 0, size= 13),
plot.subtitle = element_text(size = 10, hjust = 0), #subtitle not showing
legend.title = element_text(size = 12),
legend.title.align = 0.5)
))
})
}
shinyApp(ui = ui, server = server)
View(opioid_shape_wide)
