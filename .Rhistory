ggplot() +
geom_sf() +
geom_sf(data = sf_af_house_dev, aes(size = units), alpha = .3)
# Project
library(tidyverse)
library(jsonlite)
library(sf)
library(tidycensus)
library(ggthemes)
library(RColorBrewer)
library(ggmap)
library(grid)
############## Google Map Layer
google_api_key <- "AIzaSyAmWiRl8MXntcSV-YrTDc7DrgmjyPz7gzg"
register_google(key = google_api_key)
############### Google Map Layer End
path <- "/Users/josemacias/Desktop/Harris Work/Winter 2024/R Programming 2"
setwd(path)
############### API datasets
me_health_res_link <- "https://data.cityofchicago.org/resource/wust-ytyg.json"
# Mental health resources
mental_health <-
fromJSON(me_health_res_link, simplifyVector = TRUE)
# pullling lat and long from nested data frame
latitude <- # unpacking a datafram within the pull
sapply(mental_health$location$coordinates, function(coords) coords[1])
longitude <- # unpacking a datafram within the pull
sapply(mental_health$location$coordinates, function(coords) coords[2])
mental_health$longitude <- longitude # saving lat from former data frame
mental_health$latitude  <- latitude # saving lat from former data frame
# Final Mental Health
clean_mental_health <-
mental_health |>
select(-location) |>
mutate(backup_lat = latitude,  # saving in case we turn into a simple frame
backup_long = longitude, # saving incase we turn into a simple frame
other_languages = case_when(
other_languages == "Spanish;" ~ "Spanish",
other_languages == "Spanish;Korean;" ~ "Spanish; Korean",
other_languages == "Polish; Spanish" ~ "Spanish; Polish",
other_languages == "Amharic; Arabic; Bengali; Bosnian; Dari; Farsi; French; Gujarati; Kurdish; Malayalam; Nepali; Pashto; Spanish; Tagalog; Urdu" ~ "Amharic; Arabic; Bengali; Bosnian; Dari;\nFarsi; French; Gujarati; Kurdish;\nMalayalam; Nepali; Pashto; Spanish; Tagalog; Urdu",
is.na(other_languages) ~ "Information Not Available",
TRUE ~ other_languages  # Default case
))
# Affordable housing deve
af_house_link <- "https://data.cityofchicago.org/resource/s6ha-ppgi.json"
af_house_dev <-
fromJSON(af_house_link, simplifyVector = TRUE) |>
select(1:14, -c(location,x_coordinate,y_coordinate)) |>
mutate(
units = as.numeric(units),
proper_latitude = longitude,
proper_longitude = latitude,
backup_lat = proper_latitude, # saving incase we turn into a simple frame
backup_long = proper_longitude) |> # saving incase we turn into a simple frame
select(community_area,property_type,units,proper_latitude,proper_longitude,backup_lat,backup_long) |>
rename(latitude=proper_latitude,longitude= proper_longitude)
# Chi Town shape
chi_town <- st_read("https://data.cityofchicago.org/resource/igwz-8jzy.geojson") %>%
select(community, geometry)
############### API Datasets End
############### Spatial Work Begin
# Spatial Merges with Chi Shape
sf_clean_mental_health <-
clean_mental_health |>
st_as_sf(coords = c("latitude","longitude"),
crs = st_crs(chi_town)) |>
st_join(chi_town) |>
filter(!is.na(community))
############### NOT FINISHED FEB 3 2024
sf_af_house_dev <-
af_house_dev |>
st_as_sf(coords = c("latitude","longitude"),
crs = 4326)
chi_town |>
ggplot() +
geom_sf() +
geom_sf(data = sf_af_house_dev, aes(size = units), alpha = .3)
############### NOT FINISHED FEB 3 2024
# Census Data
options(timeout = 999)
vars <- c(
"B01003_001", # Total Pop
"B01001B_001", # Black Pop
"B01001I_001", # Hispanic Pop
"B07011_001" # Median Income
)
acs_vars_table <- load_variables(2022,dataset = "acs5")
census_data <-
get_acs(geography = "tract",
variables = vars,
state = "IL",
county = "Cook",
geometry = T,
output = "wide",
year = 2022) |>
rename(black_pop = B01001B_001E,latino_pop = B01001I_001E, total_pop = B01003_001E, median_income = B07011_001E)
# change crs to chicago in census data
chi_town_crs <- st_crs(chi_town)
census_data <- st_transform(census_data, crs = chi_town_crs)
# chicago track info
chi_tract_link <- "https://data.cityofchicago.org/resource/74p9-q2aq.json"
chi_track_sf <-
fromJSON(chi_tract_link)
# filter for chicago tracts
intersections <- st_intersects(census_data, chi_town, sparse = FALSE)
filtered_census_tracts <- census_data[rowSums(intersections) > 0, ]
# point color
colourCount = length(unique(sf_clean_mental_health$other_languages))
# Maps
bbox <- st_bbox(filtered_census_tracts)
# These are  bounding box coordinates
(xmin <- bbox["xmin"])
(xmax <- bbox["xmax"])
(ymin <- bbox["ymin"])
(ymax <- bbox["ymax"])
expanded_bbox <- c(xmin - 0.01, xmax + 0.01, ymin - 0.01, ymax + 0.01)
# Maps
# Calculate the center of  bounding box
center_lon <- (xmin + xmax) / 2
center_lat <- (ymin + ymax) / 2
zoom_level <- 11  # Start with 11, then adjust as needed
map <- get_googlemap(center = c(lon = center_lon, lat = center_lat), zoom = zoom_level, scale = 2,
maptype = "terrain", size = c(640, 640),
boundingbox = expanded_bbox)
raster_map <- rasterGrob(as.raster(map))
############### Spatial Work End
############### Chi Mentla Health Map Begin
chi_town |>
ggplot() +
annotation_custom(raster_map,
xmin = xmin,
xmax = xmax,
ymin = ymin,
ymax = ymax) +
geom_sf(data = filtered_census_tracts, aes(fill = black_pop), alpha = .75) +
scale_fill_viridis_c(labels = scales::comma_format()) +
geom_sf(color = "gold", fill = NA, linewidth = .2) +
geom_point(data = sf_clean_mental_health,
aes(x =backup_lat,
y = backup_long, color =other_languages),
shape = 6,
alpha = .8,
size = .7) +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Paired"))(colourCount)) +
geom_sf_label(data = chi_town, aes(label = community),
# face = "bold",
size = 1, color = "gold", fill = "black",
label.size = 0.1,
label.padding = unit(0.15, "lines"),
alpha = .3) +
labs(title = "Diversity of Language Services in Chicago's Mental Health Resources",
subtitle = "Spatial Distribution and Language Diversity of Mental Health Facilities",
color = "Languages Served",
fill = "Black Population",
caption = "Sources: Chicago Open Data Portal, 2022 U.S. American Comunity Census (ACS) 5-Year Estimates") +
theme_map()+
guides(
color = guide_legend(
title.position = "top",
title.theme = element_text(size = 10,face = "bold"),
legend.text = element_text(size = 9),
ncol = 2, byrow = TRUE, keywidth = 1,
keyheight = 1)) +
theme(
legend.position = "right",
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title = element_text(size = 10, face = "bold"),
plot.caption = element_text(size = 5, face = "bold"),
# plot.caption.position = "panel"
)
ggsave("chi_town_health.png",plot = last_plot(), width = 10, height = 6, bg = "white", dpi = 500)
############### Chi Mental Health Map End
############### Chi Affordable Housing Development Map Begin
chi_town |>
ggplot() +
annotation_custom(raster_map,
xmin = xmin,
xmax = xmax,
ymin = ymin,
ymax = ymax) +
geom_sf(data = filtered_census_tracts, aes(fill = black_pop), alpha = .75) +
scale_fill_viridis_c(labels = scales::comma_format()) +
geom_sf(color = "gold", fill = NA, linewidth = .2) +
geom_point(data = sf_clean_mental_health,
aes(x =backup_lat,
y = backup_long, color =other_languages),
shape = 6,
alpha = .8,
size = .7) +
scale_color_manual(values = colorRampPalette(brewer.pal(8, "Paired"))(colourCount)) +
geom_sf_label(data = chi_town, aes(label = community),
# face = "bold",
size = 1, color = "gold", fill = "black",
label.size = 0.1,
label.padding = unit(0.15, "lines"),
alpha = .3) +
labs(title = "Diversity of Language Services in Chicago's Mental Health Resources",
subtitle = "Spatial Distribution and Language Diversity of Mental Health Facilities",
color = "Languages Served",
fill = "Black Population",
caption = "Sources: Chicago Open Data Portal, 2022 U.S. American Comunity Census (ACS) 5-Year Estimates") +
theme_map()+
guides(
color = guide_legend(
title.position = "top",
title.theme = element_text(size = 10,face = "bold"),
legend.text = element_text(size = 9),
ncol = 2, byrow = TRUE, keywidth = 1,
keyheight = 1)) +
theme(
legend.position = "right",
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12),
legend.text = element_text(size = 9),
legend.title = element_text(size = 10, face = "bold"),
plot.caption = element_text(size = 5, face = "bold"),
# plot.caption.position = "panel"
)
chi_town |>
ggplot() +
geom_sf() +
geom_sf(data = sf_af_house_dev, aes(size = units), alpha = .3)
View(sf_af_house_dev)
chi_town |>
ggplot() +
geom_sf() +
geom_sf(data = sf_af_house_dev, aes(size = units), alpha = .3)
data20 <- read_csv(file.path(path, "overdose counts 2020.csv"))
path <- "/Users/josemacias/Documents/GitHub/Housing-and-Migrants-Chicago"
setwd(path)
data20 <- read_csv(file.path(path, "overdose counts 2020.csv"))
data21 <- read_csv(file.path(path, "overdose counts 2021.csv"))
data22 <- read_csv(file.path(path, "overdose counts 2022.csv"))
View(data20)
opioid_data <- reduce(list(data20, data21, data22), full_join)
View(opioid_data)
#rename column
opioid_data <- opioid_data %>%
rename(
zip = Patient_Zip)
#rename column
opioid_data <- opioid_data %>%
rename(
zip = Patient_Zip)
path <- "/Users/josemacias/Documents/GitHub/Housing-and-Migrants-Chicago"
setwd(path)
#rename column
opioid_data <- opioid_data %>%
rename(
zip = Patient_Zip)
opioid_data <- reduce(list(data20, data21, data22), full_join)
#rename column
opioid_data <- opioid_data %>%
rename(
zip = Patient_Zip)
#download Chicago neighborhood shapefiles
zip_chi_shape <- st_read(
file.path(path,
"/Boundaries - ZIP Codes/geo_export_32855347-20ff-48e3-9078-cead470bbf31.shp"))
#download Chicago neighborhood shapefiles
zip_chi_shape <- st_read(
file.path(path,
"Boundaries - ZIP Codes/geo_export_32855347-20ff-48e3-9078-cead470bbf31.shp"))
library(pdftools)
library(tabulizer)
devtools::install_github("ropensci/tabulizer")
library(tabulizer)
download.file("https://www.chicago.gov/content/dam/city/depts/fss/supp_info/Homeless/2023PITCOUNT/2023%20PIT%20Report_FINAL.pdf",
destfile = "2023_PIT_Report.pdf", mode = "wb")
text <- pdf_text("2023_PIT_Report.pdf")
text
table_text <- "2022*        312         -19%          0         0%           312        -19%\n   2021*        383         -23%          0        -100%         383        -24%\n   2020         499         -11%          7        250%          506        -10%\n   2019         559          -1%          2        100%          561         -1%\n   2018         565         -2%           1         0%           566         -2%\n   2017         575         -13%          1        -50%          576        -13%\n   2016         661         -2%           2        -71%          663         -3%\n   2015         677         -13%          7        250%          684         13%\n   2014         782          7%           2        -60%          784         7%\n   2013         730          -1%          5        -83%          735         -3%\n   2012         740          2%          NA         NA           NA          NA\n   2011         729         -14%         30         36%          759        -13%\n   2009         848         47%          22         0%           870         45%\n*Change in unsheltered methodology to sampling approach\n** Inclusion of Asylum Seekers begins\n\n\n\n\n        "
# Split the text into lines
lines <- unlist(str_split(table_text, pattern = "\n"))
lines
# Process each line to extract columns
table_data <- lapply(lines, function(line) {
# Remove extra spaces and split by space to get columns
cols <- unlist(str_split(str_squish(line), pattern = " "))
return(cols)
})
# Convert the list to a data frame
df <- as.data.frame(do.call(rbind, table_data))
View(df)
print(df)
table_text <- "Table B-1: Total Population of People Experiencing Homelessness\n                  Sheltered              Unsheltered                   Total\n   Year       Count     % Change       Count   % Change      Count         % Change\n  2023**       5,149        97%         990        -21%      6,139           53%\n   2022*       2,612        -14%        1,263      -13%      3,875          -13%\n   2021*       3,023       -22%         1,454       -5%      4,477          -17%\n   2020        3,861        -4%         1,529       21%      5,390           2%\n   2019        4,030        -2%         1,260       -7%      5,290           -3%\n   2018        4,093        -1%         1,357      -13%      5,450           -4%\n   2017        4,135        -11%        1,561       26%      5,696           -3%\n   2016        4,646        -2%         1,243      -40%      5,889          -13%\n   2015        4,731        -11%       2,055       113%      6,786           8%\n   2014        5,329        5%          965        -21%      6,294           0%\n   2013        5,060         1%         1,219      -29%      6,279           -5%\n   2012        4,988        2%           NA         NA           NA          NA\n   2011        4,873        -9%         1,725       95%      6,598           6%\n   2009        5,356        23%         884        -44%      6,240           5%\n   2007        4,346        13%         1,576       9%       5,922           12%\n\n\nTable B-2. Total Population of Homeless Families with Children\n                   Sheltered              Unsheltered              Total\n   Year        Count     % Change       Count   % Change     Count     % Change\n  2023**        555         77.8%         1         0%           546        75.0%\n   2022*        312         -19%          0         0%           312        -19%\n   2021*        383         -23%          0        -100%         383        -24%\n   2020         499         -11%          7        250%          506        -10%\n   2019         559          -1%          2        100%          561         -1%\n   2018         565         -2%           1         0%           566         -2%\n   2017         575         -13%          1        -50%          576        -13%\n   2016         661         -2%           2        -71%          663         -3%\n   2015         677         -13%          7        250%          684         13%\n   2014         782          7%           2        -60%          784         7%\n   2013         730          -1%          5        -83%          735         -3%\n   2012         740          2%          NA         NA           NA          NA\n   2011         729         -14%         30         36%          759        -13%\n   2009         848         47%          22         0%           870         45%\n*Change in unsheltered methodology to sampling approach\n** Inclusion of Asylum Seekers begins\n\n\n\n\n                                                    29\n"                                   "
# Split the text into lines
lines <- unlist(str_split(table_text, pattern = "\n"))
table_text <- "Table B-1: Total Population of People Experiencing Homelessness\n                  Sheltered              Unsheltered                   Total\n   Year       Count     % Change       Count   % Change      Count         % Change\n  2023**       5,149        97%         990        -21%      6,139           53%\n   2022*       2,612        -14%        1,263      -13%      3,875          -13%\n   2021*       3,023       -22%         1,454       -5%      4,477          -17%\n   2020        3,861        -4%         1,529       21%      5,390           2%\n   2019        4,030        -2%         1,260       -7%      5,290           -3%\n   2018        4,093        -1%         1,357      -13%      5,450           -4%\n   2017        4,135        -11%        1,561       26%      5,696           -3%\n   2016        4,646        -2%         1,243      -40%      5,889          -13%\n   2015        4,731        -11%       2,055       113%      6,786           8%\n   2014        5,329        5%          965        -21%      6,294           0%\n   2013        5,060         1%         1,219      -29%      6,279           -5%\n   2012        4,988        2%           NA         NA           NA          NA\n   2011        4,873        -9%         1,725       95%      6,598           6%\n   2009        5,356        23%         884        -44%      6,240           5%\n   2007        4,346        13%         1,576       9%       5,922           12%\n\n\nTable B-2. Total Population of Homeless Families with Children\n                   Sheltered              Unsheltered              Total\n   Year        Count     % Change       Count   % Change     Count     % Change\n  2023**        555         77.8%         1         0%           546        75.0%\n   2022*        312         -19%          0         0%           312        -19%\n   2021*        383         -23%          0        -100%         383        -24%\n   2020         499         -11%          7        250%          506        -10%\n   2019         559          -1%          2        100%          561         -1%\n   2018         565         -2%           1         0%           566         -2%\n   2017         575         -13%          1        -50%          576        -13%\n   2016         661         -2%           2        -71%          663         -3%\n   2015         677         -13%          7        250%          684         13%\n   2014         782          7%           2        -60%          784         7%\n   2013         730          -1%          5        -83%          735         -3%\n   2012         740          2%          NA         NA           NA          NA\n   2011         729         -14%         30         36%          759        -13%\n   2009         848         47%          22         0%           870         45%\n*Change in unsheltered methodology to sampling approach\n** Inclusion of Asylum Seekers begins\n\n\n\n\n                                                    29\n"
# Split the text into lines
lines <- unlist(str_split(table_text, pattern = "\n"))
lines
# Split the text into lines
lines <- unlist(str_split(table_text, pattern = "\n"))
# Process each line to extract columns
table_data <- lapply(lines, function(line) {
# Remove extra spaces and split by space to get columns
cols <- unlist(str_split(str_squish(line), pattern = " "))
return(cols)
})
# Convert the list to a data frame
df <- as.data.frame(do.call(rbind, table_data))
# Rename and clean the columns as needed
names(df) <- c("Year", "ShelteredCount", "ShelteredChange", "UnshelteredCount", "UnshelteredChange", "TotalCount", "TotalChange")
View(df)
df |>
slice(4:14)
df |>
slice(4:14)
df <- as.data.frame(do.call(rbind, table_data))
# Rename and clean the columns as needed
names(df) <- c("Year", "ShelteredCount", "ShelteredChange", "UnshelteredCount", "UnshelteredChange", "TotalCount", "TotalChange")
df |>
slice(4:14)
df |>
slice(4:18)
# Split the text into lines
lines <- unlist(str_split(table_text, pattern = "\n"))
# Process each line to extract columns
# Skipping the first few lines which are headers
table_data <- lapply(lines[7:length(lines)], function(line) {
# Remove extra spaces and split by space to get columns
cols <- unlist(str_split(str_squish(line), pattern = "\\s{2,}"))
return(cols)
})
# Determine the number of columns
num_cols <- max(sapply(table_data, length))
# Ensure all rows have the same number of columns, padding with NA if necessary
table_data <- lapply(table_data, function(row) {
length(row) <- num_cols
return(row)
})
# Convert the list to a data frame
df <- as.data.frame(do.call(rbind, table_data), stringsAsFactors = FALSE)
# Assign column names
column_names <- c("Year", "ShelteredCount", "ShelteredChangePercent", "UnshelteredCount",
"UnshelteredChangePercent", "TotalCount", "TotalChangePercent")
names(df) <- column_names
# download Chicago neighborhood shapefiles
zip_chi_shape <- st_read("https://data.cityofchicago.org/Facilities-Geographic-Boundaries/Boundaries-ZIP-Codes/gdcf-axmw.geojson")
# download Chicago neighborhood shapefiles
zip_chi_shape <- st_read("https://data.cityofchicago.org/resource/unjd-c2ca.json.geojson")
# download Chicago neighborhood shapefiles
zip_chi_shape <- st_read("https://data.cityofchicago.org/resource/unjd-c2ca.geojson")
View(zip_chi_shape)
opioid_shape <- merge(zip_chi_shape, opioid_data, by = "zip")
View(opioid_data)
View(opioid_shape)
plot(opioid_shape)
st_write(opioid_shape,
"opioid_shape.shp",
driver="ESRI Shapefile")
opioid_shape <- merge(zip_chi_shape, opioid_data, by = "zip")
st_write(opioid_shape,
"opioid_shape.shp",
driver="ESRI Shapefile")
# Now try writing the shapefile again
st_write(opioid_shape, "opioid_shape.shp", driver = "ESRI Shapefile",append=FALSE)
colnames(opioid_shape)
colnames(data20)
View(opioid_shape)
View(opioid_data)
left_join(zip_chi_shape,
opioid_data, join_by(zip))
opioid_data <-
opioid_data %>%
rename(
zip = Patient_Zip)
data20 <- read_csv(file.path(path, "overdose counts 2020.csv"))
data21 <- read_csv(file.path(path, "overdose counts 2021.csv"))
data22 <- read_csv(file.path(path, "overdose counts 2022.csv"))
opioid_data <- reduce(list(data20, data21, data22), full_join)
#rename column
opioid_data <-
opioid_data |>
mutate(zip = as.character(zip))
opioid_data <-
opioid_data |>
mutate(zip = as.character(zip))
opioid_data <- reduce(list(data20, data21, data22), full_join)
#rename column
opioid_data <-
opioid_data |>
mutate(zip = as.character(zip))
glimpse(opioid_data)
opioid_data <- reduce(list(data20, data21, data22), full_join)
opioid_data <- reduce(list(data20, data21, data22), full_join)
glimpse(opioid_data)
data20 <- read_csv(file.path(path, "overdose counts 2020.csv"))
data21 <- read_csv(file.path(path, "overdose counts 2021.csv"))
data22 <- read_csv(file.path(path, "overdose counts 2022.csv"))
opioid_data <- reduce(list(data20, data21, data22), full_join)
glimpse(opioid_data)
# Project
library(tidyverse)
library(jsonlite)
library(sf)
library(tidycensus)
library(ggthemes)
library(RColorBrewer)
library(ggmap)
library(grid)
############## Google Map Layer
google_api_key <- "AIzaSyAmWiRl8MXntcSV-YrTDc7DrgmjyPz7gzg"
register_google(key = google_api_key)
############### Google Map Layer End
path <- "/Users/josemacias/Documents/GitHub/Housing-and-Migrants-Chicago"
setwd(path)
############### API datasets
me_health_res_link <- "https://data.cityofchicago.org/resource/wust-ytyg.json"
# Mental health resources
mental_health <-
fromJSON(me_health_res_link, simplifyVector = TRUE)
# pullling lat and long from nested data frame
latitude <- # unpacking a datafram within the pull
sapply(mental_health$location$coordinates, function(coords) coords[1])
longitude <- # unpacking a datafram within the pull
sapply(mental_health$location$coordinates, function(coords) coords[2])
mental_health$longitude <- longitude # saving lat from former data frame
mental_health$latitude  <- latitude # saving lat from former data frame
# Final Mental Health
clean_mental_health <-
mental_health |>
select(-location) |>
mutate(backup_lat = latitude,  # saving in case we turn into a simple frame
backup_long = longitude, # saving incase we turn into a simple frame
other_languages = case_when(
other_languages == "Spanish;" ~ "Spanish",
other_languages == "Spanish;Korean;" ~ "Spanish; Korean",
other_languages == "Polish; Spanish" ~ "Spanish; Polish",
other_languages == "Amharic; Arabic; Bengali; Bosnian; Dari; Farsi; French; Gujarati; Kurdish; Malayalam; Nepali; Pashto; Spanish; Tagalog; Urdu" ~ "Amharic; Arabic; Bengali; Bosnian; Dari;\nFarsi; French; Gujarati; Kurdish;\nMalayalam; Nepali; Pashto; Spanish; Tagalog; Urdu",
is.na(other_languages) ~ "Information Not Available",
TRUE ~ other_languages  # Default case
))
# Affordable housing deve
af_house_link <- "https://data.cityofchicago.org/resource/s6ha-ppgi.json"
af_house_dev <-
fromJSON(af_house_link, simplifyVector = TRUE) |>
select(1:14, -c(location,x_coordinate,y_coordinate)) |>
mutate(
units = as.numeric(units),
proper_latitude = longitude,
proper_longitude = latitude,
backup_lat = proper_latitude, # saving incase we turn into a simple frame
backup_long = proper_longitude) |> # saving incase we turn into a simple frame
select(community_area,property_type,units,proper_latitude,proper_longitude,backup_lat,backup_long) |>
rename(latitude=proper_latitude,longitude= proper_longitude)
# Chi Town shape
chi_town <- st_read("https://data.cityofchicago.org/resource/igwz-8jzy.geojson") |>
select(community, geometry)
############### API Datasets End
############### Spatial Work Begin
# Spatial Merges with Chi Shape
# Mental Health shape
sf_clean_mental_health <-
clean_mental_health |>
st_as_sf(coords = c("latitude","longitude"),
crs = st_crs(chi_town)) |>
st_join(chi_town) |>
filter(!is.na(community))
# Afordable housing shape
sf_af_house_dev <-
af_house_dev |>
st_as_sf(coords = c("latitude","longitude"),
crs = 4326)
data20 <- read_csv(file.path(path, "overdose counts 2020.csv"))
data21 <- read_csv(file.path(path, "overdose counts 2021.csv"))
data22 <- read_csv(file.path(path, "overdose counts 2022.csv"))
opioid_data <- reduce(list(data20, data21, data22), full_join)
#rename column
opioid_data <-
opioid_data |>
mutate(zip = as.character(zip))
#rename column
opioid_data <-
opioid_data |>
mutate(zip = as.character(Patient_Zip))
data20 <- read_csv(file.path(path, "overdose counts 2020.csv"))
data21 <- read_csv(file.path(path, "overdose counts 2021.csv"))
data22 <- read_csv(file.path(path, "overdose counts 2022.csv"))
opioid_data <- reduce(list(data20, data21, data22), full_join) |>
mutate(zip = as.character(Patient_Zip))
opioid_shape <- left_join(zip_chi_shape,
opioid_data, join_by(zip))
# download Chicago neighborhood shapefiles
zip_chi_shape <- st_read("https://data.cityofchicago.org/resource/unjd-c2ca.geojson")
opioid_shape <- left_join(zip_chi_shape,
opioid_data, join_by(zip))
st_write(opioid_shape,
"opioid_shape.shp",
driver="ESRI Shapefile")
# Now try writing the shapefile again
st_write(opioid_shape, "opioid_shape.shp", driver = "ESRI Shapefile",append=FALSE)
glimpse()
glimpse(opioid_shape)
opioid_shape <- left_join(zip_chi_shape,
opioid_data, join_by(zip)) |>
select(-c(shape_area,shape_len, objectid,Patient_Zip))
# Now try writing the shapefile again
st_write(opioid_shape, "opioid_shape.shp", driver = "ESRI Shapefile",append=FALSE)
# Check the structure of the data
str(opioid_shape)
# Save the data as a GeoPackage
st_write(opioid_shape, "opioid_shape.gpkg", driver = "GPKG")
# Save the data as a GeoPackage
st_write(opioid_shape, "shape_files/opioid_zip/opioid_shape.gpkg", driver = "GPKG")
data20 <- read_csv(file.path(path, "outside_data/overdose counts 2020.csv"))
data21 <- read_csv(file.path(path, "outside_data/overdose counts 2021.csv"))
data22 <- read_csv(file.path(path, "outside_data/overdose counts 2022.csv"))
