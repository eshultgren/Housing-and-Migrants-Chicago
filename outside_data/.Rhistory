color = ~color_palette(Responses),  # Use color scale based on 'Responses'
fillOpacity = 0.7,
popup = ~paste("Location: ", Location, "<br>Responses: ", Responses)
) %>%
setView(lng = mean(df$Longitude), lat = mean(df$Latitude), zoom = 10) %>%
addMiniMap()  # Add a mini map for better navigation
sf_df <- st_as_sf(df, coords = c("Longitude", "Latitude"), crs = 4326)
plot(sf_df["Responses"], main = "Responses Map")
tm_shape(sf_df) +
tm_bubbles(size = "Responses", col = "red", alpha = 0.7) +
tm_text("Location") +
tm_legend(outside = TRUE) +
tm_layout(main.title = "Responses Map")
ggplot() +
geom_sf(data = sf_df, aes(size = Responses, color = Responses), alpha = 0.7) +
theme_minimal() +
labs(title = "Responses Map")
chicago_map <- get_stamenmap(bbox = c(left = -88.3, bottom = 41.4, right = -87.3, top = 42.3),
zoom = 11, maptype = "terrain-background", source = "stamen")
library(ggmap)
library(ggplot2sf)
install.packages("ggplot2sf")
library(ggplot2sf)
library(ggplot2sf)
chicago_map <- get_stamenmap(bbox = c(left = -88.3, bottom = 41.4, right = -87.3, top = 42.3),
zoom = 11, maptype = "terrain-background", source = "stamen")
chicago_map <- get_stamenmap(bbox = c(left = -88.3, bottom = 41.4, right = -87.3, top = 42.3),
zoom = 10, maptype = "terrain-background", source = "stamen")
chicago_map <- get_stamenmap(bbox = c(left = -88.3, bottom = 41.4, right = -87.3, top = 42.3),
zoom = 11, maptype = "terrain", source = "osm")
chicago_map <- get_map(location = c(lon = mean(df$Longitude), lat = mean(df$Latitude)),
zoom = 11, maptype = "terrain", source = "osm")
chicago_map <- get_map(location = c(lon = mean(df$Longitude), lat = mean(df$Latitude)),
zoom = 11, maptype = "terrain", source = "osm")
library(osmdata)
osm_basemap <- opq(bbox = c(left = -88.3, bottom = 41.4, right = -87.3, top = 42.3)) %>%
add_osm_feature(key = 'highway', value = 'residential') %>%
osmdata_sf()
ggplot() +
geom_sf(data = osm_basemap$osm_lines, color = "gray") +
geom_sf(data = sf_df, aes(size = Responses, color = Responses), alpha = 0.7) +
theme_minimal() +
labs(title = "Responses Map")
osm_basemap <- opq(bbox = c(left = -87.9, bottom = 41.8, right = -87.6, top = 42.1)) %>%
add_osm_feature(key = 'highway', value = 'residential') %>%
osmdata_sf()
# Get basemap for Chicago
basemap <- get_stamenmap(bbox = c(left = min(sf_df$Longitude),
bottom = min(sf_df$Latitude),
right = max(sf_df$Longitude),
top = max(sf_df$Latitude)),
zoom = 11, maptype = "terrain-background", source = "stamen")
basemap <- get_stamenmap(bbox = c(left = min(sf_df$Longitude),
bottom = min(sf_df$Latitude),
right = max(sf_df$Longitude),
top = max(sf_df$Latitude)),
zoom = 10, maptype = "terrain-background", source = "stamen")
leaflet(sf_df) %>%
addTiles() %>%
addCircleMarkers(
radius = ~sqrt(Responses) * 5,
color = "red",
fillOpacity = 0.7,
popup = ~paste("Location: ", Location, "<br>Responses: ", Responses)
) %>%
setView(lng = mean(sf_df), lat = mean(sf_df_subset$Latitude), zoom = 10)
leaflet(sf_df) %>%
addTiles() %>%
addCircleMarkers(
radius = ~sqrt(Responses) * 5,
color = "red",
fillOpacity = 0.7,
popup = ~paste("Location: ", Location, "<br>Responses: ", Responses)
) %>%
setView(lng = mean(sf_df), lat = mean(sf_df$Latitude), zoom = 10)
chicago_map <- get_stamenmap(
bbox = c(
left = min(sf_df$Longitude),
bottom = min(sf_df$Latitude),
right = max(sf_df$Longitude),
top = max(sf_df$Latitude)
),
zoom = 11,
maptype = "terrain-background",
source = "stamen"
)
chicago_map <- get_map(
location = c(lon = mean(sf_df$Longitude), lat = mean(sf_df$Latitude)),
zoom = 11,
maptype = "terrain",
source = "osm"
)
if (!is.na(mean(sf_df$Longitude)) && !is.na(mean(sf_df$Latitude))) {
chicago_map <- get_map(
location = c(lon = mean(sf_df$Longitude), lat = mean(sf_df$Latitude)),
zoom = 11,
maptype = "terrain",
source = "osm"
)
ggplot() +
geom_sf(data = sf_df, aes(size = Responses, color = Responses), alpha = 0.7) +
theme_minimal() +
labs(title = "Responses Map")
ggplot() +
geom_sf(data = sf_df, aes(size = Responses, color = Responses), alpha = 0.7) +
theme_minimal() +
labs(title = "Responses Map")
if (!is.na(mean(sf_df$Longitude)) && !is.na(mean(sf_df$Latitude))) {
chicago_map <- get_map(
location = c(lon = mean(sf_df$Longitude), lat = mean(sf_df$Latitude)),
zoom = 11,
maptype = "terrain",
source = "osm"
)}
ggplot() +
geom_sf(data = sf_df, aes(size = Responses, color = Responses), alpha = 0.7) +
theme_minimal() +
labs(title = "Responses Map")
rm(list = ls())
setwd("C:/Users/higgi/Documents/GitHub/problem-set-2-julia-higgins")
# Load libraries
library("tidyverse")
library("sf")
# Import first dataset: Socioeconomic indicators in Chicago
chi_socioeconomic <- read.csv("Census_Data_-_Selected_socioeconomic_indicators_in_Chicago__2008___2012_20240131.csv")
# Import second dataset: Chicago affordable rental housing developments
chi_housing <- read.csv("Affordable_Rental_Housing_Developments_20240129.csv")
rm(list = ls())
setwd("C:/Users/higgi/Documents/GitHub/problem-set-2-julia-higgins")
# Load libraries
library("tidyverse")
library("sf")
# Import first dataset: Socioeconomic indicators in Chicago
chi_socioeconomic <- read.csv("Census_Data_-_Selected_socioeconomic_indicators_in_Chicago__2008___2012_20240131.csv")
# Import second dataset: Chicago affordable rental housing developments
chi_housing <- read.csv("Affordable_Rental_Housing_Developments_20240129.csv")
setwd("C:/Users/higgi/Documents/GitHub/problem-set-2-julia-higgins")
# Clear workspace and set working directory
rm(list = ls())
setwd("C:/Users/higgi/Documents/GitHub/Housing-and-Migrants-Chicago/outside_data")
# Load libraries
library(tidyverse)
library(tidyr)
library(sf)
library(dplyr)
library(ggplot2)
library(scales)
library(cowplot)
library(ggmap)
library(shiny)
# Import equity zone data
equity_zones <- read.csv("Healthy_Chicago_Equity_Zones_20240222.csv")
# Import grocery store data
grocery_stores <- read.csv("Map_of_Grocery_Stores_-_2013.csv")
# Import mental health clinic location data
mh_clinics <- read.csv("CDPH_Mental_Health_Resources_20240222.csv")
# Import community area shapefiles
# Specify zipfile path
zip_path <- "Boundaries - Community Areas (current).zip"
# Create a temporary directory to extract the contents + unzip files
temp_dir <- tempdir()
unzip(zip_path, exdir = temp_dir)
# List the files in the temporary directory
list.files(temp_dir)
# Read shapefiles into R
chi_comm_area <- st_read(temp_dir)
# Extract latitude and longitude
coordinates <- st_coordinates(chi_comm_area$geometry)
# Create new columnswith lat and long
chi_comm_area$Latitude <- head(coordinates[, "Y"], n = nrow(chi_comm_area))
chi_comm_area$Longitude <- head(coordinates[, "X"], n = nrow(chi_comm_area))
# Convert all three dfs to shapefile format to support spatial join
equity_zones_sf <- st_as_sf(equity_zones, wkt = "Geometry")
grocery_stores_sf <- st_as_sf(grocery_stores, coords = c("LONGITUDE", "LATITUDE"))
# Extract lat and long from mh_clinics sf as intermediate step
mh_clinics$Longitude <- as.numeric(gsub("POINT \\((.*?) .*", "\\1", mh_clinics$Location))
mh_clinics$Latitude <- as.numeric(gsub("POINT \\(.*? (.*?)\\)", "\\1", mh_clinics$Location))
mh_clinics_sf <- st_as_sf(mh_clinics, coords = c("Longitude", "Latitude"))
# Standardize coordinate reference systems across sfs before joining
st_crs(chi_comm_area)
st_crs(equity_zones_sf)
chi_comm_area <- st_set_crs(chi_comm_area, st_crs(equity_zones_sf))
# Perform spatial join to create master dataset for mapping
joined_data <- st_join(chi_comm_area, equity_zones_sf, join = st_intersects)
joined_data <- st_join(joined_data, grocery_stores_sf, join = st_intersects)
joined_data <- st_join(joined_data, mh_clinics_sf, join = st_intersects)
# FIRST MAP: EQUITY ZONES
# Simple map that shows equity zone distribution
equity_zones_plot <- ggplot(data = unique(joined_data)) +
geom_sf(aes(fill = Equity.Zone), alpha = 0.7)
mh_clinics_sf <- mh_clinics_sf %>%
group_by(ZIP) %>%
mutate(Num_Clinics = n()) %>%
ungroup()
plot_data <- st_join(joined_data, grocery_count, by = "COMMUNITY.AREA.NAME")
# Clear workspace and set working directory
rm(list = ls())
setwd("C:/Users/higgi/Documents/GitHub/Housing-and-Migrants-Chicago/outside_data")
# Load libraries
library(tidyverse)
library(tidyr)
library(sf)
library(dplyr)
library(ggplot2)
library(scales)
library(cowplot)
library(ggmap)
library(shiny)
# Import equity zone data
equity_zones <- read.csv("Healthy_Chicago_Equity_Zones_20240222.csv")
# Import grocery store data
grocery_stores <- read.csv("Map_of_Grocery_Stores_-_2013.csv")
# Import mental health clinic location data
mh_clinics <- read.csv("CDPH_Mental_Health_Resources_20240222.csv")
# Import community area shapefiles
# Specify zipfile path
zip_path <- "Boundaries - Community Areas (current).zip"
# Create a temporary directory to extract the contents + unzip files
temp_dir <- tempdir()
unzip(zip_path, exdir = temp_dir)
# List the files in the temporary directory
list.files(temp_dir)
# Read shapefiles into R
chi_comm_area <- st_read(temp_dir)
# Extract latitude and longitude
coordinates <- st_coordinates(chi_comm_area$geometry)
# Create new columnswith lat and long
chi_comm_area$Latitude <- head(coordinates[, "Y"], n = nrow(chi_comm_area))
chi_comm_area$Longitude <- head(coordinates[, "X"], n = nrow(chi_comm_area))
# Convert all three dfs to shapefile format to support spatial join
equity_zones_sf <- st_as_sf(equity_zones, wkt = "Geometry")
grocery_stores_sf <- st_as_sf(grocery_stores, coords = c("LONGITUDE", "LATITUDE"))
# Extract lat and long from mh_clinics sf as intermediate step
mh_clinics$Longitude <- as.numeric(gsub("POINT \\((.*?) .*", "\\1", mh_clinics$Location))
mh_clinics$Latitude <- as.numeric(gsub("POINT \\(.*? (.*?)\\)", "\\1", mh_clinics$Location))
mh_clinics_sf <- st_as_sf(mh_clinics, coords = c("Longitude", "Latitude"))
# Standardize coordinate reference systems across sfs before joining
st_crs(chi_comm_area)
st_crs(equity_zones_sf)
chi_comm_area <- st_set_crs(chi_comm_area, st_crs(equity_zones_sf))
# Perform spatial join to create master dataset for mapping
joined_data <- st_join(chi_comm_area, equity_zones_sf, join = st_intersects)
joined_data <- st_join(joined_data, grocery_stores_sf, join = st_intersects)
joined_data <- st_join(joined_data, mh_clinics_sf, join = st_intersects)
# FIRST MAP: EQUITY ZONES
# Simple map that shows equity zone distribution
equity_zones_plot <- ggplot(data = unique(joined_data)) +
geom_sf(aes(fill = Equity.Zone), alpha = 0.7)
#equity_zones_plot
# SECOND MAP: GROCERY STORES
# Aggregate number of grocery stores by Community Area
grocery_count <- grocery_stores_sf %>%
group_by(COMMUNITY.AREA.NAME) %>%
summarise(Num_Grocery_Stores = n())
# Join the aggregated counts with the spatial data
plot_data <- st_join(joined_data, grocery_count, by = "COMMUNITY.AREA.NAME")
View(plot_data)
plot_data <- plot_data %>%
group_by(ZIP) %>%
mutate(Num_Clinics = n()) %>%
ungroup()
mh_clinic_plot_2_int <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Clinics), alpha = 0.7) +
scale_fill_gradient(name = "Number of Grocery Stores", low = "#feca8d", high = "#cd4071")
mh_clinic_plot_2_int
mh_clinic_plot_2_int <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Clinics), alpha = 0.7) +
scale_fill_gradient(name = "Number of Mental Health Clinics", low = "#feca8d", high = "#cd4071")
mh_clinic_plot_2 <- mh_clinic_plot_2_int +
geom_sf(data = equity_zones_sf, aes(color = Equity.Zone), fill = NA, size = 1.5, lwd = 1.2) +
scale_color_manual(values = c("red", "green", "blue", "purple", "orange", "pink"))+
#ggtitle("Equity Zones + Grocery Stores")+
theme(plot.title = element_text(hjust = 0.5))
mh_clinic_plot_2
mh_clinic_plot_2_int <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Clinics), alpha = 0.7) +
scale_fill_gradient(name = "Number of Mental Health Clinics", low = "#feac76", high = "#912b81")
mh_clinic_plot_2 <- mh_clinic_plot_2_int +
geom_sf(data = equity_zones_sf, aes(color = Equity.Zone), fill = NA, size = 1.5, lwd = 1.2) +
scale_color_manual(values = c("red", "green", "blue", "purple", "orange", "pink"))+
#ggtitle("Equity Zones + Grocery Stores")+
theme(plot.title = element_text(hjust = 0.5))
mh_clinic_plot_2 <- mh_clinic_plot2 +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
mh_clinic_plot_2_int <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Clinics), alpha = 0.7) +
scale_fill_gradient(name = "Number of Mental Health Clinics", low = "#feac76", high = "#912b81")
mh_clinic_plot_2 <- mh_clinic_plot_2_int +
geom_sf(data = equity_zones_sf, aes(color = Equity.Zone), fill = NA, size = 1.5, lwd = 1.2) +
scale_color_manual(values = c("red", "green", "blue", "purple", "orange", "pink"))+
#ggtitle("Equity Zones + Grocery Stores")+
theme(plot.title = element_text(hjust = 0.5))
mh_clinic_plot_2 <- mh_clinic_plot_2 +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
unhoused_locations_df <- data.frame(
Location = c("The Loop, River North", "CTA - Red Line (95th/Dan Ryan)", "CTA - Blue Line (Forest Park)",
"Near West Side/Medical District", "CTA - Blue Line (Cumberland/Rosemont)", "North Side",
"CTA - Red Line", "South Side (East of State)", "O'Hare Airport", "South Side (West of State)",
"CTA - Red Line (Howard)", "West Town, Kennedy Expressway", "Midway Airport Terminal", "Northwest Side"),
Responses = c(170, 125, 118, 112, 71, 58, 54, 38, 33, 29, 13, 13, 12, 2),
Latitude = c(41.89248568824814, 41.72258849002998, 41.87370675013457, 41.86883204433447, 41.983883465320844, 41.90389519059428,
41.889900182393696, 41.75042676688248, 41.98037675551297, 41.75042676688248, 42.01889620273381, 41.95930482218085,
41.78852626097361, 41.88530874443534),
Longitude = c(-87.634044880516, -87.62443385767142, -87.81697954232854, -87.67398565436856, -87.83862460424264, -87.63211612952345,
-87.62808780459785, -87.63411546128873, -87.90900606226334, -87.63411546128873, -87.67255656226084, -87.74088846041468,
-87.74167007391868, -87.79271259245185)
)
# Convert locations dataset into shapefile format
unhoused_locations_sf <- st_as_sf(unhoused_locations_df, coords = c("Longitude", "Latitude"))
mh_clinic_plot_2 <- mh_clinic_plot_2 +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
mh_clinic_plot_2
unhoused_locations_sf <- unhoused_locations_sf %>%
rename(`Number of Unhoused Individuals` = Responses)
mh_clinic_plot_2 <- mh_clinic_plot_2 +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
mh_clinic_plot_2
mh_clinic_plot_2 <- mh_clinic_plot_2 +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1)) +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
mh_clinic_plot_2
grocery_plot_2
# Clear workspace and set working directory
rm(list = ls())
setwd("C:/Users/higgi/Documents/GitHub/Housing-and-Migrants-Chicago/outside_data")
# Load libraries
library(tidyverse)
library(tidyr)
library(sf)
library(dplyr)
library(ggplot2)
library(scales)
library(cowplot)
library(ggmap)
library(shiny)
# Import equity zone data
equity_zones <- read.csv("Healthy_Chicago_Equity_Zones_20240222.csv")
# Import grocery store data
grocery_stores <- read.csv("Map_of_Grocery_Stores_-_2013.csv")
# Import mental health clinic location data
mh_clinics <- read.csv("CDPH_Mental_Health_Resources_20240222.csv")
# # Compile unhoused locations dataframe
unhoused_locations_df <- data.frame(
Location = c("The Loop, River North", "CTA - Red Line (95th/Dan Ryan)", "CTA - Blue Line (Forest Park)",
"Near West Side/Medical District", "CTA - Blue Line (Cumberland/Rosemont)", "North Side",
"CTA - Red Line", "South Side (East of State)", "O'Hare Airport", "South Side (West of State)",
"CTA - Red Line (Howard)", "West Town, Kennedy Expressway", "Midway Airport Terminal", "Northwest Side"),
Responses = c(170, 125, 118, 112, 71, 58, 54, 38, 33, 29, 13, 13, 12, 2),
Latitude = c(41.89248568824814, 41.72258849002998, 41.87370675013457, 41.86883204433447, 41.983883465320844, 41.90389519059428,
41.889900182393696, 41.75042676688248, 41.98037675551297, 41.75042676688248, 42.01889620273381, 41.95930482218085,
41.78852626097361, 41.88530874443534),
Longitude = c(-87.634044880516, -87.62443385767142, -87.81697954232854, -87.67398565436856, -87.83862460424264, -87.63211612952345,
-87.62808780459785, -87.63411546128873, -87.90900606226334, -87.63411546128873, -87.67255656226084, -87.74088846041468,
-87.74167007391868, -87.79271259245185)
)
# Rename responses column for clarity
unhoused_locations_sf <- unhoused_locations_sf %>%
rename(`Number of Unhoused Individuals` = Responses)
# Clear workspace and set working directory
rm(list = ls())
setwd("C:/Users/higgi/Documents/GitHub/Housing-and-Migrants-Chicago/outside_data")
# Load libraries
library(tidyverse)
library(tidyr)
library(sf)
library(dplyr)
library(ggplot2)
library(scales)
library(cowplot)
library(ggmap)
library(shiny)
# Import equity zone data
equity_zones <- read.csv("Healthy_Chicago_Equity_Zones_20240222.csv")
# Import grocery store data
grocery_stores <- read.csv("Map_of_Grocery_Stores_-_2013.csv")
# Import mental health clinic location data
mh_clinics <- read.csv("CDPH_Mental_Health_Resources_20240222.csv")
# # Compile unhoused locations dataframe
unhoused_locations_df <- data.frame(
Location = c("The Loop, River North", "CTA - Red Line (95th/Dan Ryan)", "CTA - Blue Line (Forest Park)",
"Near West Side/Medical District", "CTA - Blue Line (Cumberland/Rosemont)", "North Side",
"CTA - Red Line", "South Side (East of State)", "O'Hare Airport", "South Side (West of State)",
"CTA - Red Line (Howard)", "West Town, Kennedy Expressway", "Midway Airport Terminal", "Northwest Side"),
Responses = c(170, 125, 118, 112, 71, 58, 54, 38, 33, 29, 13, 13, 12, 2),
Latitude = c(41.89248568824814, 41.72258849002998, 41.87370675013457, 41.86883204433447, 41.983883465320844, 41.90389519059428,
41.889900182393696, 41.75042676688248, 41.98037675551297, 41.75042676688248, 42.01889620273381, 41.95930482218085,
41.78852626097361, 41.88530874443534),
Longitude = c(-87.634044880516, -87.62443385767142, -87.81697954232854, -87.67398565436856, -87.83862460424264, -87.63211612952345,
-87.62808780459785, -87.63411546128873, -87.90900606226334, -87.63411546128873, -87.67255656226084, -87.74088846041468,
-87.74167007391868, -87.79271259245185)
)
# Import community area shapefiles
# Specify zipfile path
zip_path <- "Boundaries - Community Areas (current).zip"
# Create a temporary directory to extract the contents + unzip files
temp_dir <- tempdir()
unzip(zip_path, exdir = temp_dir)
# List the files in the temporary directory
list.files(temp_dir)
# Read shapefiles into R
chi_comm_area <- st_read(temp_dir)
# Extract latitude and longitude
coordinates <- st_coordinates(chi_comm_area$geometry)
# Create new columnswith lat and long
chi_comm_area$Latitude <- head(coordinates[, "Y"], n = nrow(chi_comm_area))
chi_comm_area$Longitude <- head(coordinates[, "X"], n = nrow(chi_comm_area))
# Convert all dfs to shapefile format to support spatial join
equity_zones_sf <- st_as_sf(equity_zones, wkt = "Geometry")
grocery_stores_sf <- st_as_sf(grocery_stores, coords = c("LONGITUDE", "LATITUDE"))
unhoused_locations_sf <- st_as_sf(unhoused_locations_df, coords = c("Longitude", "Latitude"))
mh_clinics$Longitude <- as.numeric(gsub("POINT \\((.*?) .*", "\\1", mh_clinics$Location))
mh_clinics$Latitude <- as.numeric(gsub("POINT \\(.*? (.*?)\\)", "\\1", mh_clinics$Location))
mh_clinics_sf <- st_as_sf(mh_clinics, coords = c("Longitude", "Latitude"))
# Standardize coordinate reference systems across sfs before joining
st_crs(chi_comm_area)
st_crs(equity_zones_sf)
chi_comm_area <- st_set_crs(chi_comm_area, st_crs(equity_zones_sf))
# Perform spatial join to create master dataset for mapping
joined_data <- st_join(chi_comm_area, equity_zones_sf, join = st_intersects)
joined_data <- st_join(joined_data, grocery_stores_sf, join = st_intersects)
joined_data <- st_join(joined_data, mh_clinics_sf, join = st_intersects)
equity_zones_plot <- ggplot(data = unique(joined_data)) +
geom_sf(aes(fill = Equity.Zone), alpha = 0.7)
grocery_count <- grocery_stores_sf %>%
group_by(COMMUNITY.AREA.NAME) %>%
summarise(Num_Grocery_Stores = n())
plot_data <- st_join(joined_data, grocery_count, by = "COMMUNITY.AREA.NAME")
grocery_plot_int <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Grocery_Stores), alpha = 0.7) +
scale_fill_gradient(name = "Number of Grocery Stores", low = "#feca8d", high = "#cd4071")
grocery_plot <- grocery_plot_int +
geom_sf(data = equity_zones_sf, aes(color = Equity.Zone), fill = NA, size = 1.5, lwd = 1.2) +
scale_color_manual(values = c("red", "green", "blue", "purple", "orange", "pink"))+
#ggtitle("Equity Zones + Grocery Stores")+
theme(plot.title = element_text(hjust = 0.5))
# Rename responses column in unhoused sf for clarity
unhoused_locations_sf <- unhoused_locations_sf %>%
rename(`Number of Unhoused Individuals` = Responses)
grocery_plot_2 <- grocery_plot +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
grocery_plot_2
plot_data <- st_join(joined_data, grocery_count, by = "COMMUNITY.AREA.NAME")
grocery_plot <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Grocery_Stores), alpha = 0.7) +
scale_fill_gradient(name = "Number of Grocery Stores", low = "#feca8d", high = "#cd4071")
grocery_plot_equity <- grocery_plot +
geom_sf(data = equity_zones_sf, aes(color = Equity.Zone), fill = NA, size = 1.5, lwd = 1.2) +
scale_color_manual(values = c("red", "green", "blue", "purple", "orange", "pink"))+
#ggtitle("Equity Zones + Grocery Stores")+
theme(plot.title = element_text(hjust = 0.5))
#grocery_plot
# Rename responses column in unhoused sf for clarity
unhoused_locations_sf <- unhoused_locations_sf %>%
rename(`Number of Unhoused Individuals` = Responses)
grocery_plot_unhoused_pop <- grocery_plot_equity +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
grocery_plot_unhoused_pop
plot_data <- plot_data %>%
group_by(ZIP) %>%
mutate(Num_Clinics = n()) %>%
ungroup()
# Exclude the top 2 outliers with the highest latitude values
plot_data <- plot_data %>%
arrange(desc(Num_Clinics)) %>%
filter(row_number() > 2)
mh_clinic_plot_2_int <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Clinics), alpha = 0.7) +
scale_fill_gradient(name = "Number of Mental Health Clinics", low = "#feac76", high = "#912b81")
mh_clinic_plot <- ggplot(data = unique(plot_data)) +
geom_sf(aes(fill = Num_Clinics), alpha = 0.7) +
scale_fill_gradient(name = "Number of Mental Health Clinics", low = "#feac76", high = "#912b81")
mh_clinic_plot_equity <- mh_clinic_plot +
geom_sf(data = equity_zones_sf, aes(color = Equity.Zone), fill = NA, size = 1.5, lwd = 1.2) +
scale_color_manual(values = c("red", "green", "blue", "purple", "orange", "pink"))+
#ggtitle("Equity Zones + Grocery Stores")+
theme(plot.title = element_text(hjust = 0.5))
mh_clinic_plot_unhoused_pop <- mh_clinic_plot_equity +
geom_sf(data = unhoused_locations_sf, aes(size = `Number of Unhoused Individuals`), color = "#150e38", shape=17, fill = "#150e38") +  scale_alpha_continuous(range = c(0.1, 1), name = "Number of Unhoused Individuals") +
#labs(title = "Equity Zones, MH Clinics, Grocery Stores + Unhoused Population") +
theme_minimal()+
theme(axis.text = element_blank(), axis.title = element_blank())+
guides(color = guide_legend(ncol = 2))
mh_clinic_plot_unhoused_pop
mh_clinic_plot_unhoused_pop
view(plot_data)
